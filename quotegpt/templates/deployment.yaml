apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          imagePullPolicy: IfNotPresent
          image: {{ .Values.api.image }}
          ports:
            - containerPort: {{ .Values.api.port }}
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          envFrom:
            - secretRef:
                name: postgres-env
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          ports:
            - containerPort: {{ .Values.postgres.port }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d/schema.sql
              subPath: schema.sql 
          envFrom:
            - secretRef:
                name: postgres-env
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: init-sql
          configMap:
            name: postgres-init-sql